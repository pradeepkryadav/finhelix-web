{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/I320253/Desktop/Personal/projects/finhelix-web/src/app/api/waitlist/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\n\nexport const runtime = 'nodejs'\n\nexport async function POST(req: NextRequest) {\n  try {\n    const { email } = await req.json()\n    if (typeof email !== 'string' || !email.includes('@')) {\n      return NextResponse.json({ ok: false, error: 'Invalid email' }, { status: 400 })\n    }\n\n    // Prefer Vercel KV if env present\n    const hasKV = !!process.env.KV_REST_API_URL && !!process.env.KV_REST_API_TOKEN\n    if (hasKV) {\n      const { kv } = await import('@vercel/kv')\n      await kv.sadd('waitlist:emails', email.toLowerCase())\n      await kv.hset(`waitlist:email:${email.toLowerCase()}`, {\n        email: email.toLowerCase(),\n        ts: Date.now(),\n        ua: req.headers.get('user-agent') || ''\n      })\n      return NextResponse.json({ ok: true, stored: 'kv' })\n    }\n\n    // Local dev fallback: write to /tmp/waitlist.csv (ephemeral)\n    const fs = await import('fs/promises')\n    const line = `${new Date().toISOString()},${email}\\n`\n    const path = process.env.LOCAL_WAITLIST_PATH || '/tmp/waitlist.csv'\n    await fs.appendFile(path, line, 'utf8')\n    return NextResponse.json({ ok: true, stored: 'file', path })\n  } catch (e: any) {\n    console.error(e)\n    return NextResponse.json({ ok: false, error: e?.message || 'error' }, { status: 500 })\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA;;AAEO,MAAM,UAAU;AAEhB,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,IAAI;QAChC,IAAI,OAAO,UAAU,YAAY,CAAC,MAAM,QAAQ,CAAC,MAAM;YACrD,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,IAAI;gBAAO,OAAO;YAAgB,GAAG;gBAAE,QAAQ;YAAI;QAChF;QAEA,kCAAkC;QAClC,MAAM,QAAQ,CAAC,CAAC,QAAQ,GAAG,CAAC,eAAe,IAAI,CAAC,CAAC,QAAQ,GAAG,CAAC,iBAAiB;QAC9E,IAAI,OAAO;YACT,MAAM,EAAE,EAAE,EAAE,GAAG;;;;;YACf,MAAM,GAAG,IAAI,CAAC,mBAAmB,MAAM,WAAW;YAClD,MAAM,GAAG,IAAI,CAAC,CAAC,eAAe,EAAE,MAAM,WAAW,IAAI,EAAE;gBACrD,OAAO,MAAM,WAAW;gBACxB,IAAI,KAAK,GAAG;gBACZ,IAAI,IAAI,OAAO,CAAC,GAAG,CAAC,iBAAiB;YACvC;YACA,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,IAAI;gBAAM,QAAQ;YAAK;QACpD;QAEA,6DAA6D;QAC7D,MAAM,KAAK;QACX,MAAM,OAAO,GAAG,IAAI,OAAO,WAAW,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC;QACrD,MAAM,OAAO,QAAQ,GAAG,CAAC,mBAAmB,IAAI;QAChD,MAAM,GAAG,UAAU,CAAC,MAAM,MAAM;QAChC,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,IAAI;YAAM,QAAQ;YAAQ;QAAK;IAC5D,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC;QACd,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,IAAI;YAAO,OAAO,GAAG,WAAW;QAAQ,GAAG;YAAE,QAAQ;QAAI;IACtF;AACF","debugId":null}}]
}